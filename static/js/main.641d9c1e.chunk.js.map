{"version":3,"sources":["components/addDish.js","components/navBar.js","components/tableRow.js","components/dishTable.js","components/card.js","components/container.js","components/editDish.js","App.js","redux/constants/action-types.js","redux/reducers/dishReducers.js","redux/reducers/filterReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["AddDish","props","useState","id","uuidv4","dishName","carbs","proteins","fats","dishDetails","setDishDetails","isEdit","setIsEdit","useEffect","undefined","dish","handleInput","name","event","console","log","target","value","dispatch","useDispatch","className","htmlFor","type","onChange","required","onClick","preventDefault","payload","toast","NavBar","setDishName","keyword","useSelector","state","filter","style","backgroundColor","display","to","placeholder","aria-label","TableRow","Dish","location","history","push","pathname","AllDishes","showForm","setShowForm","dishes","allDish","scope","reg","RegExp","match","map","index","Card","Container","minHeight","height","EditDish","color","textDecoration","App","path","exact","component","ActionTypes","initialState","reducer","combineReducers","di","newItem","Object","assign","del","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAoHeA,EA3GC,SAACC,GACb,MAAsCC,mBAAS,CAC3CC,GAAIC,cACJC,SAAU,GACVC,MAAM,GACNC,SAAS,GACTC,KAAM,KALV,mBAAOC,EAAP,KAAoBC,EAApB,KAQA,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACN,QAAgBC,IAAbb,EAAMc,KAAiB,CACtB,MAA8Cd,EAAMc,KAA7CZ,EAAP,EAAOA,GAAIE,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,KACtCE,EAAe,CACXP,KACAE,WACAC,QACAC,WACAC,SAEJI,OAAeE,IAALX,MAGhB,CAACF,IAGH,IAAMe,EAAc,SAACC,GAAD,OAAU,SAACC,GAG3BC,QAAQC,IAAI,CAACH,GAAM,MAAMC,EAAMG,OAAOC,OACtCZ,EAAe,2BACRD,GADO,kBAETQ,EAAOC,EAAMG,OAAOC,WAIvBC,EAAWC,cAkBjB,OACI,mCAEI,qBAAKC,UAAU,+BAAf,SACA,iCACI,sBAAKA,UAAU,OAAf,UACI,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,0BACA,uBACIE,KAAK,OACLL,MAAOb,EAAYJ,SACnBoB,UAAU,eAAetB,GAAG,WAAWc,KAAK,WAAWW,SAAUZ,EAAY,YAAaa,UAAQ,OAG1G,sBAAKJ,UAAU,OAAf,UACI,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,2CACA,uBACIE,KAAK,SACLL,MAAOb,EAAYF,SACnBkB,UAAU,eAAetB,GAAG,WAC5ByB,SAAUZ,EAAY,YACtBa,UAAQ,OAEhB,sBAAKJ,UAAU,OAAf,UACI,uBAAOC,QAAQ,OAAOD,UAAU,aAAhC,uCACA,uBAAOE,KAAK,SACRL,MAAOb,EAAYD,KACnBiB,UAAU,eAAetB,GAAG,OAAOyB,SAAUZ,EAAY,QAASa,UAAQ,OAElF,sBAAKJ,UAAU,OAAf,UACI,uBAAOC,QAAQ,QAAQD,UAAU,aAAjC,gDACA,uBAAOE,KAAK,SACRL,MAAOb,EAAYH,MACnBmB,UAAU,eAAetB,GAAG,QAAQyB,SAAUZ,EAAY,SAAUa,UAAQ,OAEpF,qBAAKJ,UAAU,OAAf,SACA,wBACIE,KAAK,SACLF,UAAU,kBACVK,QAtDK,SAACZ,GAClBA,EAAMa,iBAKHpB,GACCY,EAAS,CAACI,KAAM,YAAaK,QAASvB,IACtCwB,YAAM,iBAGNV,EAAS,CAACI,KAAM,WAAYK,QAASvB,IACrCwB,YAAM,gBAuCF,SAMQtB,EAAO,eAAgB,kBCnDhCuB,EAlDA,WACX,MAAgChC,mBAAS,IAAzC,mBAAOG,EAAP,KAAiB8B,EAAjB,KACOC,EAAWC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,UAApCH,QAMDb,EAAWC,cAOjB,OACI,sBAAKC,UAAU,sBAAsBe,MAAO,CAACC,gBAAgB,gBAA7D,UACI,sBAAKD,MAAO,CAACE,QAAQ,QAArB,UACI,qBAAKjB,UAAU,YAAf,SACI,cAAC,IAAD,CAAMkB,GAAG,IAAIlB,UAAU,4BAAvB,qBAEJ,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMkB,GAAG,SAASlB,UAAU,4BAA5B,yBAGR,sBAAKA,UAAU,SAAf,UAEkB,OAAVW,EAIA,yBAAQT,KAAK,SAASF,UAAU,kDAAkDK,QAAS,kBAAIP,EAAS,CAACI,KAAM,mBAA/G,UACSS,EADT,QAEQ,sBAAMX,UAAU,0BAAhB,kBAEL,GAGP,uBAAMA,UAAU,cAAhB,UACI,uBACAA,UAAU,oBACVH,MAAOjB,EACPsB,KAAK,OAAOxB,GAAG,OAAOc,KAAK,OAAO2B,YAAY,SAASC,aAAW,SAASjB,SAvCvE,SAACV,GACjBA,EAAMa,iBACNI,EAAYjB,EAAMG,OAAOC,OACzBH,QAAQC,IAAIf,MAqCA,wBAAQoB,UAAU,eAAeE,KAAK,SAASG,QAlC5C,SAACZ,GAChBA,EAAMa,iBACNR,EAAS,CAACI,KAAM,cAAeK,QAAS,CAACI,QAAS/B,KAClD8B,EAAY,KA+BA,8BCILW,EA/CE,SAAC7C,GACd,MAA0CA,EAAM8C,KAAzC1C,EAAP,EAAOA,SAAUE,EAAjB,EAAiBA,SAAUD,EAA3B,EAA2BA,MAAOE,EAAlC,EAAkCA,KAW5Be,EAAWC,cAKjB,OACI,mCACI,+BAEI,oBAAIC,UAAU,8BAAd,SAA6CpB,IAC7C,oBAAIoB,UAAU,8BAAd,SAA6ClB,IAC7C,oBAAIkB,UAAU,8BAAd,SAA6CnB,IAC7C,oBAAImB,UAAU,8BAAd,SAA6CjB,IAC7C,oBAAIiB,UAAU,yCAAd,SAAiE,EAATlB,EAAmB,EAAND,EAAe,EAALE,IAC/E,oBAAIiB,UAAU,8BAAd,SACI,wBACIE,KAAK,SACLF,UAAU,kBACVK,QAAS,WAzBrB7B,EAAM+C,SAASC,QAAQC,KAAK,CAC1BC,SAAU,QACVb,MAAOrC,EAAM8C,QAoBP,oBAMJ,oBAAItB,UAAU,8BAAd,SACI,wBACIE,KAAK,SACLF,UAAU,iBACVK,QAAS,kBAvBzBP,EAAS,CAACI,KAAM,cAAeK,QAAS/B,EAAM8C,YAC9Cd,YAAM,iBAmBM,iCCsCLmB,EApEG,SAACnD,GACf,MAAgCC,oBAAS,GAAzC,mBAAOmD,EAAP,KAAiBC,EAAjB,KACMC,EAASlB,aAAY,SAACC,GAAD,OAAWA,EAAMkB,QAAQzC,QAC7CqB,EAAWC,aAAY,SAACC,GAAD,OAAUA,EAAMC,UAAvCH,QASP,OACI,qCACI,cAAC,EAAD,IAEA,sBAAKX,UAAU,qBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BAEI,oBAAIgC,MAAM,MAAMhC,UAAU,8BAA1B,kBACA,oBAAIgC,MAAM,MAAMhC,UAAU,8BAA1B,sBACA,oBAAIgC,MAAM,MAAMhC,UAAU,8BAA1B,mBACA,oBAAIgC,MAAM,MAAMhC,UAAU,8BAA1B,kBACA,oBAAIgC,MAAM,MAAMhC,UAAU,8BAA1B,sBACA,oBAAIgC,MAAM,MAAMhC,UAAU,gCAC1B,oBAAIgC,MAAM,MAAMhC,UAAU,qCAGlC,gCACK8B,EACAhB,QAAO,SAAAxB,GACJ,GAAa,MAAVqB,EACC,OAAOrB,EAEP,IAAI2C,EAAM,IAAIC,OAAOvB,EAAQ,KAC7B,OAAiC,MAA1BrB,EAAKV,SAASuD,MAAMF,MAIlCG,KAAI,SAAC9C,EAAM+C,GAAP,OACD,cAAC,EAAD,CACIf,KAAMhC,EAENiC,SAAU/C,GADL6D,aAQzB,uBACA,sBAAKrC,UAAU,YAAf,UAEA,wBAAQE,KAAK,SAASF,UAAU,wBAAwBK,QAAS,kBAAMwB,GAAaD,IAApF,sBAFA,cAMAA,GAAY,cAAC,EAAD,IAGhB,cAAC,IAAD,QC7BGU,EA1CF,SAAC9D,GACV,MAA0CA,EAAM8C,KAAzC1C,EAAP,EAAOA,SAAUE,EAAjB,EAAiBA,SAAUD,EAA3B,EAA2BA,MAAOE,EAAlC,EAAkCA,KAElC,OACI,mCACI,sBAAKiB,UAAU,6BAAf,UAEI,oBAAIA,UAAU,8BAAd,SAA6CpB,IAC7C,8BACQ,wBAAOoB,UAAU,SAAjB,UACI,gCACI,+BACI,uBACA,4BAGR,kCACI,+BACI,0CACA,6BAAKlB,OAET,+BACI,sCACA,6BAAKC,OAET,+BACI,+CACA,6BAAKF,OAET,qBAAImB,UAAU,aAAd,UACI,0CACA,6BAAc,EAATlB,EAAmB,EAAND,EAAe,EAALE,qBCiBjDwD,EA3CG,WACd,IAAMT,EAASlB,aAAY,SAACC,GAAD,OAAWA,EAAMkB,QAAQzC,QAC7CqB,EAAWC,aAAY,SAACC,GAAD,OAAUA,EAAMC,UAAvCH,QAEP,OACI,qCACA,cAAC,EAAD,IACA,qBAAKX,UAAU,kBAAkBe,MAAO,CAACyB,UAAU,SAAnD,SACI,qBAAKxC,UAAU,MAAMe,MAAO,CAAC0B,OAAQ,SAArC,SAII,sBAAKzC,UAAU,iBAAf,UACI,oBAAIA,UAAU,cAAd,8BADJ,IACsD,uBAElD,qBAAKA,UAAU,gBAAf,SAES8B,EACAhB,QAAO,SAAAxB,GACJ,GAAa,MAAVqB,EACC,OAAOrB,EAEP,IAAI2C,EAAM,IAAIC,OAAOvB,EAAQ,KAC7B,OAAiC,MAA1BrB,EAAKV,SAASuD,MAAMF,MAIlCG,KAAI,SAAC9C,EAAK+C,GAAN,OACD,cAAC,EAAD,CAAMf,KAAMhC,GAAW+C,mBChBxCK,EAXE,SAAClE,GACd,OACI,sBAAKwB,UAAU,iBAAf,UACI,wBAAQA,UAAU,eAAlB,SACI,cAAC,IAAD,CAAMkB,GAAG,SAASH,MAAO,CAAC4B,MAAM,QAASC,eAAe,QAAxD,oBACJ,cAAC,EAAD,CAAStD,KAAMd,EAAM+C,SAASV,QAC9B,cAAC,IAAD,QCSGgC,MAff,WACE,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,cAAC,IAAD,CAAOO,KAAK,SAASC,OAAK,EAACC,UAAWrB,IACtC,cAAC,IAAD,CAAOmB,KAAK,QAAQC,OAAK,EAACC,UAAWN,IACrC,cAAC,IAAD,qC,gBCdGO,EACE,WADFA,EAEK,cAFLA,EAGG,YAHHA,EAIK,cAJLA,EAKO,gBCFdC,EAAe,CACjB5D,KAAO,CACH,CACIZ,GAAIC,cACJC,SAAW,QACXE,SAAW,IACXD,MAAQ,IACRE,KAAO,KAEX,CACIL,GAAIC,cACJC,SAAW,YACXE,SAAW,IACXD,MAAQ,IACRE,KAAO,OCfbmE,EAAe,CACjBvC,QAAS,MCMEwC,EALCC,YAAgB,CAC5BrB,QFiBuB,WAA4C,IAA3ClB,EAA0C,uDAAlCqC,EAAkC,yCAAnBhD,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,QACrD,OAAQL,GACJ,KAAK+C,EACD,MAAO,CACH3D,KAAK,GAAD,mBAAMuB,EAAMvB,MAAZ,CAAkBiB,KAG9B,KAAK0C,EACD,MAAO,CACH3D,KAAK,YAAKuB,EAAMvB,KAAK8C,KAAI,SAAAiB,GACrB,GAAGA,EAAG3E,KAAO6B,EAAQ7B,GAAG,CACpB,IAAI4E,EAAUC,OAAOC,OAAO,GAAGjD,GAE/B,OADAb,QAAQC,IAAI,YAAY2D,GACjBA,EAEP,OAAOD,OAKvB,KAAKJ,EACD,MAAO,CACH3D,KAAK,YAAKuB,EAAMvB,KAAKwB,QAAO,SAAA2C,GAAG,OAAIA,EAAI/E,KAAO6B,EAAQ7B,QAI9D,QACI,OAAOmC,IE3CfC,ODAyB,WAA4C,IAA3CD,EAA0C,uDAAlCqC,EAAkC,yCAAnBhD,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,QACvD,OAAQL,GACJ,KAAK+C,EACD,MAAO,CACHtC,QAASJ,EAAQI,SAEzB,KAAKsC,EACD,MAAO,CACHtC,QAAS,MAEjB,QACI,OAAOE,METJ6C,EALDC,YACVR,EAAS,GACTS,OAAOC,8BAAgCD,OAAOC,gCCElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.641d9c1e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n    useDispatch\r\n} from 'react-redux';\r\n\r\nconst AddDish = (props) => {\r\n    const [dishDetails, setDishDetails] = useState({\r\n        id: uuidv4(),\r\n        dishName: \"\",\r\n        carbs:\"\",\r\n        proteins:\"\",\r\n        fats: \"\"\r\n    })\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(props.dish!==undefined){\r\n            const {id, dishName, carbs, proteins, fats} = props.dish;\r\n            setDishDetails({\r\n                id,\r\n                dishName,\r\n                carbs,\r\n                proteins,\r\n                fats\r\n            })\r\n            setIsEdit(id===undefined?false:true)\r\n        }\r\n\r\n    },[props])\r\n    \r\n\r\n    const handleInput = (name) => (event) =>{\r\n        \r\n\r\n        console.log([name]+\"---\"+event.target.value);\r\n        setDishDetails({\r\n            ...dishDetails,\r\n            [name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        // const validInput = validateInputs(dishDetails);\r\n      \r\n\r\n        // dispatch redux action\r\n        if(isEdit){\r\n            dispatch({type: \"EDIT_DISH\", payload: dishDetails});\r\n            toast(\"Dish edited\");          \r\n        } \r\n        else {\r\n            dispatch({type: \"ADD_DISH\", payload: dishDetails});\r\n            toast(\"Dish Added\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*{JSON.stringify(dishDetails)}*/}\r\n            <div className=\"container mb-4 mt-4 card p-4\">\r\n            <form>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"dishname\" className=\"form-label\" >Dish Name : </label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={dishDetails.dishName}\r\n                        className=\"form-control\" id=\"dishname\" name=\"dishName\" onChange={handleInput(\"dishName\")} required/>\r\n                    {/* <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div> */}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"proteins\" className=\"form-label\">Amount of proteins present : </label>\r\n                    <input \r\n                        type=\"number\" \r\n                        value={dishDetails.proteins}\r\n                        className=\"form-control\" id=\"proteins\"\r\n                        onChange={handleInput(\"proteins\")}\r\n                        required/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"fats\" className=\"form-label\">Amount of fats present : </label>\r\n                    <input type=\"number\"\r\n                        value={dishDetails.fats}\r\n                        className=\"form-control\" id=\"fats\" onChange={handleInput(\"fats\")} required/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"carbs\" className=\"form-label\">Amount of carbohydrates present : </label>\r\n                    <input type=\"number\" \r\n                        value={dishDetails.carbs}\r\n                        className=\"form-control\" id=\"carbs\" onChange={handleInput(\"carbs\")} required/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    {\r\n                        isEdit?\"Save Changes\": \"Add\"\r\n                    }\r\n                </button>\r\n                </div>\r\n                \r\n            </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddDish;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    const [dishName, setDishName] = useState(\"\");\r\n    const {keyword} = useSelector(state=>state.filter);\r\n    const handleInput = (event) =>{\r\n        event.preventDefault();\r\n        setDishName(event.target.value);\r\n        console.log(dishName);\r\n    }\r\n    const dispatch = useDispatch();\r\n    const searchDish = (event) => {\r\n        event.preventDefault();\r\n        dispatch({type: \"SEARCH_DISH\", payload: {keyword: dishName}});\r\n        setDishName(\"\");\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-light\" style={{backgroundColor:'antiquewhite'}}>\r\n            <div style={{display:'flex'}}>\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand mb-0 mx-0 h1\">User </Link>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Link to=\"/admin\" className=\"navbar-brand mb-0 mx-0 h1\">Admin </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                {\r\n                    keyword!==null? (\r\n                    //     <span className=\"badge rounded-pill bg-info text-light pt-2\" onClick={()=>dispatch({type: \"REMOVE_FILTER\"})}>\r\n                    //     {keyword}\r\n                    // </span>\r\n                    <button type=\"button\" className=\"badge rounded-pill bg-info text-light no-border\" onClick={()=>dispatch({type: \"REMOVE_FILTER\"})}>\r\n                            {keyword} &nbsp;\r\n                            <span className=\"badge bg-secondary ml-2\">X</span>\r\n                    </button>\r\n                    ): \"\"\r\n                }\r\n\r\n                <form className=\"d-flex mx-4\">\r\n                    <input \r\n                    className=\"form-control me-2\" \r\n                    value={dishName}\r\n                    type=\"text\" id=\"item\" name=\"item\" placeholder=\"Search\" aria-label=\"Search\" onChange={handleInput} />\r\n                    <button className=\"btn btn-dark\" type=\"submit\" onClick={searchDish}>Search</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {useDispatch} from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TableRow = (props) => {\r\n    const {dishName, proteins, carbs, fats} = props.Dish;\r\n\r\n    const editDish = () => {\r\n        \r\n            props.location.history.push({\r\n              pathname: '/edit',\r\n              state: props.Dish\r\n            });      \r\n        \r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const deleteDish = () => {\r\n        dispatch({type: \"DELETE_DISH\", payload: props.Dish});\r\n        toast(\"Dish deleted\");\r\n    }\r\n    return (\r\n        <>\r\n            <tr>\r\n                {/* <td>{id}</td> */}\r\n                <td className=\"text-center text-capitalize\">{dishName}</td>\r\n                <td className=\"text-center text-capitalize\">{proteins}</td>\r\n                <td className=\"text-center text-capitalize\">{carbs}</td>\r\n                <td className=\"text-center text-capitalize\">{fats}</td>\r\n                <td className=\"table-info text-center text-capitalize\">{proteins*4 + carbs*4 + fats*9}</td>\r\n                <td className=\"text-center text-capitalize\">\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-warning\"\r\n                        onClick={()=>editDish()}\r\n                    >Edit</button>\r\n                </td>\r\n                <td className=\"text-center text-capitalize\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => deleteDish()}\r\n                    >Delete Dish</button> \r\n                </td>\r\n                \r\n            </tr>\r\n            {/* <ToastContainer /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableRow;","import {useState} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport AddDish from \"./addDish\";\r\nimport NavBar from './navBar';\r\nimport TableRow from './tableRow';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst AllDishes = (props) => {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const dishes = useSelector((state) => state.allDish.dish);\r\n    const {keyword} = useSelector((state)=> state.filter);\r\n\r\n    // const [isEdit, setIsEdit] = useState(false);\r\n    // const editDish = (dish)=>{\r\n    //     setIsEdit(true);\r\n\r\n    //     return isEdit?<AddDish Dish={dish} />:<AddDish />\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            {/* <div className=\"col-2\"></div> */}\r\n            <div className=\"container col mt-4\">\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                {/* <th scope=\"col\" className=\"text-center text-capitalize\">id</th> */}\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\">Dish</th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\">Proteins</th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\">Carbs</th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\">Fats</th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\">Calories</th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\"></th>\r\n                                <th scope=\"col\" className=\"text-center text-capitalize\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dishes\r\n                            .filter(dish=>{\r\n                                if(keyword ==null){\r\n                                    return dish;\r\n                                } else {\r\n                                    var reg = new RegExp(keyword,'i')\r\n                                    return dish.dishName.match(reg)!=null\r\n                                }\r\n\r\n                            })\r\n                            .map((dish, index) => (\r\n                                <TableRow \r\n                                    Dish={dish} \r\n                                    key={index}\r\n                                    location={props}\r\n                                    \r\n                                />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <br />\r\n                <div className=\"container\">\r\n                    \r\n                <button type=\"button\" className=\" mx-auto btn btn-info\" onClick={() => setShowForm(!showForm)}>Add Dish</button> &nbsp;\r\n                </div> \r\n            </div>\r\n            {\r\n                showForm && <AddDish />\r\n            }\r\n            {/* <div className=\"col-2\"></div> */}\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllDishes;","const Card = (props) => {\r\n    const {dishName, proteins, carbs, fats} = props.Dish;\r\n        \r\n    return (\r\n        <>\r\n            <div className=\"card col-md-4 mx-auto mb-4\" >\r\n                {/* <img src=\"../logo192.png\" className=\"card-img-top\" alt=\"picture\" />  */}\r\n                <h5 className=\"card-title text-center mt-3\">{dishName}</h5>\r\n                <div>\r\n                        <table className=\"table \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>PROTEINS</td>\r\n                                    <td>{proteins}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>FATS</td>\r\n                                    <td>{fats}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>CARBOHYDRATES</td>\r\n                                    <td>{carbs}</td>\r\n                                </tr>\r\n                                <tr className=\"table-info\">\r\n                                    <td>CALORIES</td>\r\n                                    <td>{proteins*4 + carbs*4 + fats*9}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import { useSelector } from \"react-redux\";\r\n\r\nimport Card from './card';\r\nimport NavBar from './navBar';\r\n\r\nconst Container = () => {\r\n    const dishes = useSelector((state) => state.allDish.dish);\r\n    const {keyword} = useSelector((state)=> state.filter);\r\n    \r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div className=\"container-fluid\" style={{minHeight:'100vh'}}>\r\n            <div className=\"row\" style={{height: '100vh'}}>\r\n                {/* <div className=\"col p-3 border bg-light\"> \r\n                    Side Bar \r\n                </div> */}\r\n                <div className=\"col p-3 border\">\r\n                    <h1 className=\"text-center\">Available Dishes</h1> <br/>\r\n                    \r\n                    <div className=\"col-md-12 row\">\r\n                        {/*{List}*/}\r\n                            {dishes\r\n                            .filter(dish=>{\r\n                                if(keyword ==null){\r\n                                    return dish;\r\n                                } else {\r\n                                    var reg = new RegExp(keyword,'i')\r\n                                    return dish.dishName.match(reg)!=null\r\n                                }\r\n\r\n                            })\r\n                            .map((dish,index) => (\r\n                                <Card Dish={dish} key={index} />\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"col p-3 border bg-light\"> \r\n                    Side Bar \r\n                </div> */}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Container;","import {Link} from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AddDish from \"./addDish\"\r\n\r\nconst EditDish = (props) => {\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <button className=\"btn btn-dark\">\r\n                <Link to=\"/admin\" style={{color:'white', textDecoration:'none'}}>Back</Link></button>\r\n            <AddDish dish={props.location.state} />\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDish;","import './App.css';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport AllDishes from './components/dishTable';\nimport Container from './components/container';\nimport EditDish from './components/editDish';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Container} />\n          <Route path=\"/admin\" exact component={AllDishes} />\n          <Route path=\"/edit\" exact component={EditDish} />\n          <Route>404 Not Found!</Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","export const ActionTypes = {\r\n    ADD_DISH : \"ADD_DISH\",\r\n    DELETE_DISH : \"DELETE_DISH\",\r\n    EDIT_DISH : \"EDIT_DISH\",\r\n    SEARCH_DISH : \"SEARCH_DISH\",\r\n    REMOVE_FILTER : \"REMOVE_FILTER\"\r\n};","import { v4 as uuidv4 } from 'uuid';\r\nimport {ActionTypes} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n    dish : [\r\n        {\r\n            id: uuidv4(),\r\n            dishName : \"Salad\",\r\n            proteins : 100,\r\n            carbs : 100,\r\n            fats : 100\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            dishName : \"Rice Bowl\",\r\n            proteins : 100,\r\n            carbs : 100,\r\n            fats : 100\r\n        }\r\n    ]\r\n}\r\n\r\nexport const dishReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case ActionTypes.ADD_DISH:\r\n            return {\r\n                dish: [...state.dish, payload]\r\n            }\r\n\r\n        case ActionTypes.EDIT_DISH:\r\n            return {\r\n                dish: [...state.dish.map(di => {\r\n                    if(di.id === payload.id){\r\n                        var newItem = Object.assign({},payload);\r\n                        console.log(\"newitem--\"+newItem)\r\n                        return newItem;\r\n                    } else {\r\n                        return di;\r\n                    }\r\n                })]\r\n            }\r\n            \r\n        case ActionTypes.DELETE_DISH:\r\n            return {\r\n                dish: [...state.dish.filter(del => del.id !== payload.id)]\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ActionTypes} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n    keyword: null\r\n}\r\n\r\nexport const filterReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case ActionTypes.SEARCH_DISH:\r\n            return {\r\n                keyword: payload.keyword\r\n            }\r\n        case ActionTypes.REMOVE_FILTER:\r\n            return {\r\n                keyword: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {dishReducer} from './dishReducers';\r\nimport {filterReducer} from './filterReducer';\r\n\r\nconst reducer = combineReducers({\r\n    allDish : dishReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers/index';\r\n\r\nconst store = createStore(\r\n    reducer, {}, \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}